extends layout

block scripts
    link(rel="stylesheet" href="https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.css")
    script(src="https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.js")

block content
    h1=title
    form(method='POST' action='')
        .form-group
            label(for='title') Title:
            input#title.form-control(type='text' placeholder='Name of Book' name='title' required='true' value=(book===undefined ? '': book.title))
        .form-group
            label(for='author') Author:
            input#title.form-control(type='text' placeholder='Author' rows="4" cols="50" name='author' required='true' value=(book===undefined ? '': book.author))
        .form-group
            label(for='summary') Summary:
            input#title.form-control(type='text' placeholder='Summary' rows="4" cols="50" name='summary' required='true' value=(book===undefined ? '': book.summary))
        .form-group
            label(for='difficulty') Difficulty:
            input#title.form-control(type='Number' placeholder='Difficulty' rows="1" cols="5" name='difficulty:' required='true' value=(book===undefined ? '': book.difficulty))
        .form-group
            label(for='story') The Story:
            hr
            textarea(id='textarea' name='story')
            hr
        button.btn.btn-primary(type='submit') Submit

        if errors
            ul
                for error in errors
                    li!= error.msg
    //- script(type="text/javascript").
    //-     var simplemde = new SimpleMDE({
    //-             autofocus: true,
    //-             autosave: {
    //-                 enabled: true,
    //-                 uniqueId: "MyUniqueID",
    //-                 delay: 1000,
    //-             },
    //-             blockStyles: {
    //-                 bold: "__",
    //-                 italic: "_"
    //-             },
    //-             element: document.getElementById("textarea"),
    //-             forceSync: true,
    //-             hideIcons: ["guide", "heading"],
    //-             indentWithTabs: false,
    //-             initialValue: "!{story}",
    //-             insertTexts: {
    //-                 horizontalRule: ["", "\n\n-----\n\n"],
    //-                 image: ["![](http://", ")"],
    //-                 link: ["[", "](http://)"],
    //-                 table: ["", "\n\n| Column 1 | Column 2 | Column 3 |\n| -------- | -------- | -------- |\n| Text     | Text      | Text     |\n\n"],
    //-             },
    //-             lineWrapping: false,
    //-             parsingConfig: {
    //-                 allowAtxHeaderWithoutSpace: true,
    //-                 strikethrough: false,
    //-                 underscoresBreakWords: true,
    //-             },
    //-             placeholder: "Type here...",
    //-             promptURLs: true,
    //-             renderingConfig: {
    //-                 singleLineBreaks: false,
    //-                 codeSyntaxHighlighting: true,
    //-             },
    //-             shortcuts: {
    //-                 drawTable: "Cmd-Alt-T"
    //-             },
    //-             showIcons: ["code", "table"],
    //-             status: ["autosave", "lines", "words", "cursor"], // Optional usage
    //-             status: ["autosave", "lines", "words", "cursor", {
    //-                 className: "keystrokes",
    //-                 defaultValue: function(el) {
    //-                     this.keystrokes = 0;
    //-                     el.innerHTML = "0 Keystrokes";
    //-                 },
    //-                 onUpdate: function(el) {
    //-                     el.innerHTML = ++this.keystrokes + " Keystrokes";
    //-                 }
    //-             }], // Another optional usage, with a custom status bar item that counts keystrokes
    //-             tabSize: 4,
    //-         });